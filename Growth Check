#State growth graphing using consortium growth tables

#clear work space
rm(list = ls())

#load packages
x = c("ggplot2", "dplyr", "ggthemes", "tidyr", "scales", "RODBC")
lapply(x, library, character.only = T)

#Create color pallettes
growth.scale.colors <- c("<20%" = "#5F9ED1", ">20% & <40%" = "#595959", 
                         ">40% & <60%" = "#ABABAB", ">60% & <80%" = "#FF800E", 
                         ">80%" = "#006BA4")

#Create alphabetical key for proficiency levels
Proficiency.Key <- data.frame(Proficiency.Key = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"), 
                              LYProficiency = c(1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6)) 

#make list of grades for loop
grades.list <- as.list(c("KG", "FIRST", "SECOND", "THIRD", "FOURTH", "FIFTH", "SIXTH", "SEVENTH", "EIGHTH", "NINTH", "TENTH", "ELEVENTH", "TWELFTH"))

#set directory
setwd("//EDU-FileServer/HomeDirs/dduffy/My Documents/Data/State DSRs/State DSR/MN Home Brewed Growth Tables/Growth Tables Files/Growth Check")

#connect to database
db <- odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=//EDU-FileServer/HomeDirs/dduffy/My Documents/Data/State DSRs/State DSR/MN Home Brewed Growth Tables/Growth Tables Files/GrowthTableDatabase.accdb")

#create list of tables to use for growth calculation
growth_tables <- c("Student_Growth_2013", "Student_Growth_2014", "Student_Growth_2015", "Student_Growth_2016")

for(table in growth_tables){
  
  #define year
  YEAR <- substr(table, 16, 19)
    
  #Read in state growth data
  raw.data <- sqlQuery(db, paste("SELECT * FROM ", table), as.is = T)
  
  
  #Convert the growth band to a factor
  raw.data <- raw.data %>%
    mutate(GrowthBand = as.factor(GrowthBand), 
           GRADE = as.factor(sub("_.*", "", Range_Key)), 
           Proficiency.Key = sub("_([^_]*)$", "", Range_Key), 
           Proficiency.Key = regmatches(Proficiency.Key, regexpr(".$", Proficiency.Key))) %>%
    left_join(Proficiency.Key, by = "Proficiency.Key")
           
  
           
  raw.data$GRADE <- factor(raw.data$GRADE, levels = c("KG", "FIRST", "SECOND", "THIRD", 
                                                       "FOURTH", "FIFTH", "SIXTH", "SEVENTH", 
                                                       "EIGHTH", "HS"))

  pdf(paste("State Growth Using Home Brewed Tables ", YEAR, ".pdf", sep = ""))
  #reshape data for graphing
  growth.data <- raw.data %>%
    select(AnalysisID, DOMAIN, GrowthBand) %>%
    spread(DOMAIN, GrowthBand) %>%
    rename(COMPOSITE_GROWTH = COMPOSITE, 
           LISTENING_GROWTH = LISTENING, 
           READING_GROWTH = READING, 
           SPEAKING_GROWTH = SPEAKING, 
           WRITING_GROWTH = WRITING)
  
  proficiency.data <- raw.data %>%
    select(AnalysisID, DOMAIN, LYProficiency, GRADE) %>%
    
    spread(DOMAIN, LYProficiency) %>%
    rename(LY_COMPOSITE_LEVEL = COMPOSITE, 
           LY_LISTENING_LEVEL = LISTENING, 
           LY_READING_LEVEL = READING, 
           LY_WRITING_LEVEL = WRITING, 
           LY_SPEAKING_LEVEL = SPEAKING)
  
  student.data <- left_join(growth.data, proficiency.data, by = c("AnalysisID"))  
 
  #convert grade to string
  student.data <- mutate(student.data, GRADE = as.character(GRADE))
  

  #all grades reading growth
  reading.data <- student.data %>%
    select(GRADE, READING_GROWTH, LY_READING_LEVEL, AnalysisID) %>%
    filter(complete.cases(.)) %>%
    group_by(READING_GROWTH, LY_READING_LEVEL) %>%
    summarise(student.count = length(AnalysisID))
  
  
  reading.data <- reading.data %>%
    group_by(LY_READING_LEVEL, READING_GROWTH) %>%
    summarise(student.count = sum(student.count)) %>%
    mutate(percent = student.count/sum(student.count), 
           pos = cumsum(percent) - .5*percent)
  
  reading.data$READING_GROWTH <- factor(reading.data$READING_GROWTH, 
                                        levels = rev(levels(reading.data$READING_GROWTH)))
  
  print(ggplot(reading.data, aes(x=LY_READING_LEVEL, y=percent, fill=READING_GROWTH)) +
          geom_bar(position = "fill", stat='identity',  width = .7, colour="white", lwd=0.1) +
          geom_text(aes(label=ifelse(percent >= 0.05, paste(sprintf("%.0f", percent*100),"%"),""),
                        y=pos), colour="white") +
          scale_y_continuous(labels = percent_format()) +
          scale_x_continuous(breaks=1:6) +
          labs(x = "Reading Level", y = "Percentage of Students") + 
          theme_few() + scale_fill_tableau("colorblind10") +
          ggtitle("K-12 Reading Growth by Starting Proficiency Level \nMinnesota\nConsortium Growth Tables") +
          guides(fill = guide_legend(title = "Growth Levels")))
  
  
  #individual grades reading growth
  for (grade in grades.list) {
    reading.data <- student.data %>%
      filter(GRADE == grade) %>%
      select(GRADE, READING_GROWTH, LY_READING_LEVEL, AnalysisID) %>%
      filter(complete.cases(.)) %>%
      group_by(READING_GROWTH, LY_READING_LEVEL) %>%
      summarise(student.count = length(AnalysisID))
    
    
    reading.data <- reading.data %>%
      group_by(LY_READING_LEVEL, READING_GROWTH) %>%
      summarise(student.count = sum(student.count)) %>%
      mutate(percent = student.count/sum(student.count), 
             pos = cumsum(percent) - .5*percent)
    
    reading.data$READING_GROWTH <- factor(reading.data$READING_GROWTH, 
                                          levels = rev(levels(reading.data$READING_GROWTH)))
    
    print(ggplot(reading.data, aes(x=LY_READING_LEVEL, y=percent, fill=READING_GROWTH)) +
            geom_bar(position = "fill", stat='identity',  width = .7, colour="white", lwd=0.1) +
            geom_text(aes(label=ifelse(percent >= 0.05, paste(sprintf("%.0f", percent*100),"%"),""),
                          y=pos), colour="white") +
            scale_y_continuous(labels = percent_format()) +
            scale_x_continuous(breaks=1:6) +
            labs(x = "Reading Level", y = "Percentage of Students") + 
            theme_few() + scale_fill_tableau("colorblind10") +
            ggtitle(paste("Reading Growth by Starting Proficiency Level \nMinnesota\nConsortium Growth Tables\nGrade", grade, sep = " ")) +
            guides(fill = guide_legend(title = "Growth Levels")))
  }
  
  
  #all grades writing growth
  writing.data <- student.data %>%
    select(GRADE, WRITING_GROWTH, LY_WRITING_LEVEL, AnalysisID) %>%
    filter(complete.cases(.)) %>%
    group_by(WRITING_GROWTH, LY_WRITING_LEVEL) %>%
    summarise(student.count = length(AnalysisID))
  
  
  writing.data <- writing.data %>%
    group_by(LY_WRITING_LEVEL, WRITING_GROWTH) %>%
    summarise(student.count = sum(student.count)) %>%
    mutate(percent = student.count/sum(student.count), 
           pos = cumsum(percent) - .5*percent)
  
  writing.data$WRITING_GROWTH <- factor(writing.data$WRITING_GROWTH, 
                                        levels = rev(levels(writing.data$WRITING_GROWTH)))
  
  print(ggplot(writing.data, aes(x=LY_WRITING_LEVEL, y=percent, fill=WRITING_GROWTH)) +
          geom_bar(position = "fill", stat='identity',  width = .7, colour="white", lwd=0.1) +
          geom_text(aes(label=ifelse(percent >= 0.05, paste(sprintf("%.0f", percent*100),"%"),""),
                        y=pos), colour="white") +
          scale_y_continuous(labels = percent_format()) +
          scale_x_continuous(breaks=1:6) +
          labs(x = "Writing Level", y = "Percentage of Students") + 
          theme_few() + scale_fill_tableau("colorblind10") +
          ggtitle("K-12 Writing Growth by Starting Proficiency Level \nMinnesota\nConsortium Growth Tables") +
          guides(fill = guide_legend(title = "Growth Levels")))
  
  
  #individual grades writing growth
  
  for (grade in grades.list) {
    writing.data <- student.data %>%
      filter(GRADE == grade) %>%
      select(GRADE, WRITING_GROWTH, LY_WRITING_LEVEL, AnalysisID) %>%
      filter(complete.cases(.)) %>%
      group_by(WRITING_GROWTH, LY_WRITING_LEVEL) %>%
      summarise(student.count = length(AnalysisID))
    
    
    writing.data <- writing.data %>%
      group_by(LY_WRITING_LEVEL, WRITING_GROWTH) %>%
      summarise(student.count = sum(student.count)) %>%
      mutate(percent = student.count/sum(student.count), 
             pos = cumsum(percent) - .5*percent)
    
    writing.data$WRITING_GROWTH <- factor(writing.data$WRITING_GROWTH, 
                                          levels = rev(levels(writing.data$WRITING_GROWTH)))
    
    print(ggplot(writing.data, aes(x=LY_WRITING_LEVEL, y=percent, fill=WRITING_GROWTH)) +
            geom_bar(position = "fill", stat='identity',  width = .7, colour="white", lwd=0.1) +
            geom_text(aes(label=ifelse(percent >= 0.05, paste(sprintf("%.0f", percent*100),"%"),""),
                          y=pos), colour="white") +
            scale_y_continuous(labels = percent_format()) +
            scale_x_continuous(breaks=1:6) +
            labs(x = "Writing Level", y = "Percentage of Students") + 
            theme_few() + scale_fill_tableau("colorblind10") +
            ggtitle(paste("Writing Growth by Starting Proficiency Level \nMinnesota\nConsortium Growth Tables\nGrade", grade, sep = " ")) +
            guides(fill = guide_legend(title = "Growth Levels")))
  }
  
  
  #all grades speaking growth
  speaking.data <- student.data %>%
    select(GRADE, SPEAKING_GROWTH, LY_SPEAKING_LEVEL, AnalysisID) %>%
    filter(complete.cases(.)) %>%
    group_by(SPEAKING_GROWTH, LY_SPEAKING_LEVEL) %>%
    summarise(student.count = length(AnalysisID))
  
  
  speaking.data <- speaking.data %>%
    group_by(LY_SPEAKING_LEVEL, SPEAKING_GROWTH) %>%
    summarise(student.count = sum(student.count)) %>%
    mutate(percent = student.count/sum(student.count), 
           pos = cumsum(percent) - .5*percent)
  
  speaking.data$SPEAKING_GROWTH <- factor(speaking.data$SPEAKING_GROWTH, 
                                          levels = rev(levels(speaking.data$SPEAKING_GROWTH)))
  
  print(ggplot(speaking.data, aes(x=LY_SPEAKING_LEVEL, y=percent, fill=SPEAKING_GROWTH)) +
          geom_bar(position = "fill", stat='identity',  width = .7, colour="white", lwd=0.1) +
          geom_text(aes(label=ifelse(percent >= 0.05, paste(sprintf("%.0f", percent*100),"%"),""),
                        y=pos), colour="white") +
          scale_y_continuous(labels = percent_format()) +
          scale_x_continuous(breaks=1:6) +
          labs(x = "Speaking Level", y = "Percentage of Students") + 
          theme_few() + scale_fill_tableau("colorblind10") +
          ggtitle("K-12 Speaking Growth by Starting Proficiency Level \nMinnesota\nConsortium Growth Tables") +
          guides(fill = guide_legend(title = "Growth Levels")))
  
  #individual grades speaking growth
  
  for (grade in grades.list){
    speaking.data <- student.data %>%
      filter(GRADE == grade) %>%
      select(GRADE, SPEAKING_GROWTH, LY_SPEAKING_LEVEL, AnalysisID) %>%
      filter(complete.cases(.)) %>%
      group_by(SPEAKING_GROWTH, LY_SPEAKING_LEVEL) %>%
      summarise(student.count = length(AnalysisID))
    
    
    speaking.data <- speaking.data %>%
      group_by(LY_SPEAKING_LEVEL, SPEAKING_GROWTH) %>%
      summarise(student.count = sum(student.count)) %>%
      mutate(percent = student.count/sum(student.count), 
             pos = cumsum(percent) - .5*percent)
    
    speaking.data$SPEAKING_GROWTH <- factor(speaking.data$SPEAKING_GROWTH, 
                                            levels = rev(levels(speaking.data$SPEAKING_GROWTH)))
    
    print(ggplot(speaking.data, aes(x=LY_SPEAKING_LEVEL, y=percent, fill=SPEAKING_GROWTH)) +
            geom_bar(position = "fill", stat='identity',  width = .7, colour="white", lwd=0.1) +
            geom_text(aes(label=ifelse(percent >= 0.05, paste(sprintf("%.0f", percent*100),"%"),""),
                          y=pos), colour="white") +
            scale_y_continuous(labels = percent_format()) +
            scale_x_continuous(breaks=1:6) +
            labs(x = "Speaking Level", y = "Percentage of Students") + 
            theme_few() + scale_fill_tableau("colorblind10") +
            ggtitle(paste("Speaking Growth by Starting Proficiency Level \nMinnesota\nConsortium Growth Tables\nGrade", grade, sep = " ")) +
            guides(fill = guide_legend(title = "Growth Levels")))
    
  }
  
  #all grades listening growth
  listening.data <- student.data %>%
    select(GRADE, LISTENING_GROWTH, LY_LISTENING_LEVEL, AnalysisID) %>%
    filter(complete.cases(.)) %>%
    group_by(LISTENING_GROWTH, LY_LISTENING_LEVEL) %>%
    summarise(student.count = length(AnalysisID))
  
  
  listening.data <- listening.data %>%
    group_by(LY_LISTENING_LEVEL, LISTENING_GROWTH) %>%
    summarise(student.count = sum(student.count)) %>%
    mutate(percent = student.count/sum(student.count), 
           pos = cumsum(percent) - .5*percent)
  
  listening.data$LISTENING_GROWTH <- factor(listening.data$LISTENING_GROWTH, 
                                            levels = rev(levels(listening.data$LISTENING_GROWTH)))
  
  print(ggplot(listening.data, aes(x=LY_LISTENING_LEVEL, y=percent, fill= LISTENING_GROWTH)) +
          geom_bar(position = "fill", stat='identity',  width = .7, colour="white", lwd=0.1) +
          geom_text(aes(label=ifelse(percent >= 0.05, paste(sprintf("%.0f", percent*100),"%"),""),
                        y=pos), colour="white") +
          scale_y_continuous(labels = percent_format()) +
          scale_x_continuous(breaks=1:6) +
          labs(x = "Listening Level", y = "Percentage of Students") + 
          theme_few() + scale_fill_tableau("colorblind10") +
          ggtitle("K-12 Listening Growth by Starting Proficiency Level \nMinnesota\nConsortium Growth Tables") +
          guides(fill = guide_legend(title = "Growth Levels")))
  
  #individual grades listening growth
  
  for (grade in grades.list){
    listening.data <- student.data %>%
      filter(GRADE == grade) %>%
      select(GRADE, LISTENING_GROWTH, LY_LISTENING_LEVEL, AnalysisID) %>%
      filter(complete.cases(.)) %>%
      group_by(LISTENING_GROWTH, LY_LISTENING_LEVEL) %>%
      summarise(student.count = length(AnalysisID))
    
    
    listening.data <- listening.data %>%
      group_by(LY_LISTENING_LEVEL, LISTENING_GROWTH) %>%
      summarise(student.count = sum(student.count)) %>%
      mutate(percent = student.count/sum(student.count), 
             pos = cumsum(percent) - .5*percent)
    
    listening.data$LISTENING_GROWTH <- factor(listening.data$LISTENING_GROWTH, 
                                              levels = rev(levels(listening.data$LISTENING_GROWTH)))
    
    print(ggplot(listening.data, aes(x=LY_LISTENING_LEVEL, y=percent, fill= LISTENING_GROWTH)) +
            geom_bar(position = "fill", stat='identity',  width = .7, colour="white", lwd=0.1) +
            geom_text(aes(label=ifelse(percent >= 0.05, paste(sprintf("%.0f", percent*100),"%"),""),
                          y=pos), colour="white") +
            scale_y_continuous(labels = percent_format()) +
            scale_x_continuous(breaks=1:6) +
            labs(x = "Listening Level", y = "Percentage of Students") + 
            theme_few() + scale_fill_tableau("colorblind10") +
            ggtitle(paste("Listening Growth by Starting Proficiency Level \nMinnesota\nConsortium Growth Tables\nGrade", grade, sep = " ")) +
            guides(fill = guide_legend(title = "Growth Levels")))
  }
  
  #all grades composite growth
  composite.data <- student.data %>%
    select(GRADE, COMPOSITE_GROWTH, LY_COMPOSITE_LEVEL, AnalysisID) %>%
    filter(complete.cases(.)) %>%
    group_by(COMPOSITE_GROWTH, LY_COMPOSITE_LEVEL) %>%
    summarise(student.count = length(AnalysisID))

  
  composite.data <- composite.data %>%
    group_by(LY_COMPOSITE_LEVEL, COMPOSITE_GROWTH) %>%
    summarise(student.count = sum(student.count)) %>%
    mutate(percent = student.count/sum(student.count), 
           pos = cumsum(percent) - .5*percent)
  
  composite.data$COMPOSITE_GROWTH <- factor(composite.data$COMPOSITE_GROWTH, 
                                            levels = rev(levels(composite.data$COMPOSITE_GROWTH)))
  
  print(ggplot(composite.data, aes(x=LY_COMPOSITE_LEVEL, y=percent, fill= COMPOSITE_GROWTH)) +
          geom_bar(position = "fill", stat='identity',  width = .7, colour="white", lwd=0.1) +
          geom_text(aes(label=ifelse(percent >= 0.05, paste(sprintf("%.0f", percent*100),"%"),""),
                        y=pos), colour="white") +
          scale_y_continuous(labels = percent_format()) +
          scale_x_continuous(breaks=1:6) +
          labs(x = "Composite Level", y = "Percentage of Students") + 
          theme_few() + scale_fill_tableau("colorblind10") +
          ggtitle("K-12 Composite Growth by Starting Proficiency Level \nMinnesota\nConsortium Growth Tables") +
          guides(fill = guide_legend(title = "Growth Levels")))
  
  #individual grades composite growth
  for (grade in grades.list){
    composite.data <- student.data %>%
      filter(GRADE == grade) %>%
      select(GRADE, COMPOSITE_GROWTH, LY_COMPOSITE_LEVEL, AnalysisID) %>%
      filter(complete.cases(.)) %>%
      group_by(COMPOSITE_GROWTH, LY_COMPOSITE_LEVEL) %>%
      summarise(student.count = length(AnalysisID))
    
    check <- student.data %>%
      select(GRADE, COMPOSITE_GROWTH, LY_COMPOSITE_LEVEL, AnalysisID) %>%
      filter(complete.cases(.)) %>%
      group_by(LY_COMPOSITE_LEVEL, COMPOSITE_GROWTH) %>%
      summarise(student.count = length(AnalysisID))
    
    
    
    composite.data <- composite.data %>%
      group_by(LY_COMPOSITE_LEVEL, COMPOSITE_GROWTH) %>%
      summarise(student.count = sum(student.count)) %>%
      mutate(percent = student.count/sum(student.count), 
             pos = cumsum(percent) - .5*percent)
    
    composite.data$COMPOSITE_GROWTH <- factor(composite.data$COMPOSITE_GROWTH, 
                                              levels = rev(levels(composite.data$COMPOSITE_GROWTH)))
    
    print(ggplot(composite.data, aes(x=LY_COMPOSITE_LEVEL, y=percent, fill= COMPOSITE_GROWTH)) +
            geom_bar(position = "fill", stat='identity',  width = .7, colour="white", lwd=0.1) +
            geom_text(aes(label=ifelse(percent >= 0.05, paste(sprintf("%.0f", percent*100),"%"),""),
                          y=pos), colour="white") +
            scale_y_continuous(labels = percent_format()) +
            scale_x_continuous(breaks=1:6) +
            labs(x = "Composite Level", y = "Percentage of Students") + 
            theme_few() + scale_fill_tableau("colorblind10") +
            ggtitle(paste("Composite Growth by Starting Proficiency Level \nMinnesota\nConsortium Growth Tables\nGrade", grade, sep = " ")) +
            guides(fill = guide_legend(title = "Growth Levels")))
  }
  
  dev.off()
}


#close connection
odbcClose(db)

  




